# vim ft=yaml

image:
  - Visual Studio 2019

environment:
  global:
    PYPI_USERNAME: __token__
    PYPI_SERVER: https://test.pypi.org/legacy/
    PYPI_PASSWORD:
      secure:
        OXK5a0Kcyc7jYfkbpqCSUUGu6dBXpIFV3so6rCCxdoRn/xaJjxdu2Ox4rLw2FzA1YS05o72cojfF/wJIuD9Vfm+VOUJAvxRFcYyI7iZP3nwBBRA2JW2yUX/WpbqCDJqk+8lHlMhgmxmFYGzufpcDemTjc5BrCKs6OvHWWhIde7uW1FXa2szD9wf9+4JXCCdRn238Wg0t44CpRPbcAdg/DAeH6IHuRO6RUZtd+RUiif7BDhcRpJmuHGb2zaZ3ZKWybTHJxW4UmRxlqhpADb5ctw==

  matrix:
    - PYTHON: C:\Python39
    - PYTHON: C:\Python39-x64

# For the release branch we deploy to real pypi
for:
  -
    branches:
      only:
        - release

    environment:
      global:
        PYPI_USERNAME: __token__
        PYPI_SERVER: https://upload.pypi.org/legacy/
        PYPI_PASSWORD:
          secure: BlFonvNFzspp5kZ6nsJTjSJfWqviD0DDAiCgMtKVbyspHPCu+PR/fS++fUCt6hM3X03oTdvzX0wYGbZiZwPr09SO4lblS0Qyilm8rnHpICzuCDn+KBBNrIFYdvU4WYndcQ9fNniPw1QiWxmMJsbxsSc7io3thIt+fG8L9OJxFQmjzDj2Az0oXOUswSVjKmq8aoOD2agdcS+JI6uyEq9Ve5kQYdY4Bgn3FNWSsL8QxnHW8MQxuNrpaWvhV22BGqGk0NQVNlnlEyCuiPVatPKsUA==

install:
  - python -m pip install --upgrade pip
  - git clone --recursive https://github.com/KristerSJakobsson/solnp.git

build_script:
  # Build and install the wheel
  - cd solnp
  - pip install wheel==0.34.2
  - pip install -r ".\requirements-dev.txt"
  - python setup.py sdist bdist_wheel

artifacts:
  - path: solnp\dist\*.*

test_script:
  # Test the compiled build
  - ps: |
      $TARGET = Resolve-Path ".\dist\pysolnp-*.whl"
      pip install --no-index $TARGET.PATH
      python -m pytest ".\python_solnp\test\test.py"

on_success:
  # Upload the generated wheel package to pypi
  - ps: |
      C:\Python38\Scripts\pip3.exe install twine==3.1.1
      $TARGET_SRC = Resolve-Path ".\dist\pysolnp-*.tar.gz"
      C:\Python38\python.exe python -m twine upload --skip-existing --repository-url $env:PYPI_SERVER --username $env:PYPI_USERNAME --password $env:PYPI_PASSWORD $TARGET_SRC.PATH
      $TARGET_WHEEL = Resolve-Path ".\dist\pysolnp-*.whl"
      C:\Python38\python.exe -m twine upload --skip-existing --repository-url $env:PYPI_SERVER --username $env:PYPI_USERNAME --password $env:PYPI_PASSWORD $TARGET_WHEEL.PATH
