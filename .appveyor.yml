# vim ft=yaml

os: Visual Studio 2015

environment:
  global:
    PYPI_USERNAME: __token__
    PYPI_SERVER: https://test.pypi.org/legacy/
    PYPI_PASSWORD:
      secure:
        OXK5a0Kcyc7jYfkbpqCSUUGu6dBXpIFV3so6rCCxdoRn/xaJjxdu2Ox4rLw2FzA1YS05o72cojfF/wJIuD9Vfm+VOUJAvxRFcYyI7iZP3nwBBRA2JW2yUX/WpbqCDJqk+8lHlMhgmxmFYGzufpcDemTjc5BrCKs6OvHWWhIde7uW1FXa2szD9wf9+4JXCCdRn238Wg0t44CpRPbcAdg/DAeH6IHuRO6RUZtd+RUiif7BDhcRpJmuHGb2zaZ3ZKWybTHJxW4UmRxlqhpADb5ctw==

  matrix:
    - PYTHON: C:\Python36
    - PYTHON: C:\Python36-x64

# For the release branch we deploy to real pypi
#for:
#  -branches:
#    only:
#      - release
#  global:
#    PYPI_USERNAME: __token__
#    PYPI_SERVER: https://pypi.org/legacy/
#    PYPI_PASSWORD:
#      secure: OXK5a0Kcyc7jYfkbpqCSUWoLILcDMX7fwMTunuAXDtVHVKIsvdF4J1/N1jPHAwatqyAc+9DDrMgMLCxvP08yX9LcIFOfdINQFtSNzk77gpHLkL3ubBeVh7rBqN7oV9B4TBEwj80WGsfYqybOU4w5f+AFJVgFiPASw4TBSkupJq9lrv49VdDmcke6Kp2uOh0DrCsA6GAjJrynoU7di5iuNgDTjMQ3Mp3Pv63WiOYga51NIZ3ucEdLkEbwBn+qgWwF


install:
  # Install Python 3.6.2 if necessary
  - ps:

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%

  # Get Python bitness
  # https://stackoverflow.com/questions/1746475/windows-batch-help-in-setting-a-variable-from-command-output#4509885
  - set PY_CMD=python -c "import platform; print(platform.architecture()[0][:2])"
  - for /f "tokens=1 delims=" %%i in ('%PY_CMD%') do set PYTHON_ARCH=%%i

  # Fix MSVC builds for 64-bit Python
  # See
  # http://stackoverflow.com/questions/32091593/cannot-install-windows-sdk-7-1-on-windows-10
  - echo "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64 > "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\amd64/vcvars64.bat"

  # Check that we have the expected version and architecture for Python
  - python --version
  - python -c "import struct; print(struct.calcsize('P') * 8)"

  - python -m pip install --upgrade pip
  # Pin wheel to 0.26 to avoid Windows ABI tag for built wheel
  - pip install wheel==0.26
  - python -m pip install setuptools wheel cmake
  - git clone --recursive https://github.com/KristerSJakobsson/solnp.git

build_script:
  # Build and install the wheel
  - cd solnp
  - pip install -r ".\requirements-dev.txt"
  - python setup.py sdist bdist_wheel

artifacts:
  - path: solnp\dist\*.*

test_script:
  # Test the compiled build
  - ps: |
      $TARGET = Resolve-Path ".\dist\pysolnp-*.whl"
      pip install --no-index $TARGET.PATH
      python -m pytest ".\python_solnp\test\test.py"

#on_success:
  # Upload the generated wheel package to Rackspace
  # On Windows, Apache Libcloud cannot find a standard CA cert bundle so we
  # disable the ssl checks.
#  - pip install twine
#  - python -m twine upload --skip-existing --repository-url "${TWINE_SERVER}" --username "${TWINE_USERNAME}" --password "${TWINE_PASSWORD}" "${WHEEL}"
